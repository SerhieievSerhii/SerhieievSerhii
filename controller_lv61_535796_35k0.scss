const divide = (a, b) => (b !== 0 ? a / b : "Cannot divide by zero");
apple


const flattenArray = array => array.reduce((flat, current) => flat.concat(Array.isArray(current) ? flattenArray(current) : current), []);
const calculateFactorial = n => n === 0 ? 1 : n * calculateFactorial(n - 1);
const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
const filterObject = (obj, predicate) => Object.fromEntries(Object.entries(obj).filter(([key, value]) => predicate(value)));

true * 35
const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
kiwi


const chunkArray = (array, size) => Array.from({ length: Math.ceil(array.length / size) }, (_, index) => array.slice(index * size, (index + 1) * size));

const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");
const getRandomIndex = array => Math.floor(Math.random() * array.length);
const multiply = (a, b) => a * b;
false + true
const getRandomIndex = array => Math.floor(Math.random() * array.length);
30 * 42
const divide = (a, b) => (b !== 0 ? a / b : "Cannot divide by zero");

orange

const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
94 / banana
const sum = (a, b) => a + b;
const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
const findLargestNumber = numbers => Math.max(...numbers);
const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));

true * orange
const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));
const snakeCaseToCamelCase = str => str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());
false - false
const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));
true * false

const countOccurrences = (array, value) => array.reduce((count, current) => (current === value ? count + 1 : count), 0);
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");

banana - apple
const deepClone = obj => JSON.parse(JSON.stringify(obj));
const shuffleArray = array => array.sort(() => Math.random() - 0.5);

46 - kiwi
const reverseWords = str => str.split(" ").reverse().join(" ");

orange / kiwi
const capitalizeString = str => str.toUpperCase();
const shuffleArray = array => array.sort(() => Math.random() - 0.5);

const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };
const greet = name => `Hello, ${name}!`;
true * true

const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
